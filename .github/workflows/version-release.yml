name: version-release

on:
  push:
    tags:
      - "v*"

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    outputs:
      version_code: ${{ steps.version_code.outputs.version_code }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Extract tag name
        id: extract_tag_name
        run: echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Extract version from tag name
        id: extract_version_from_tag
        run: echo "version=$(echo $tag_name | sed -e 's/^v//')" >> $GITHUB_ENV
      - name: Extract version code
        id: version_code
        run: echo "${{ github.ref }}" | cut -d '-' -f2
      - name: Write version to file
        run: echo $version > version.txt
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt
  build:
    name: Build APK and Create release
    needs: [version]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get version.txt
        uses: actions/download-artifact@v3
        with:
          name: gitversion
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
      - name: Create key.properties file and write secrets to it
        run: |
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=upload" >> android/key.properties
          echo "storeFile=./keystore.jks" >> android/key.properties
      - name: Convert base64 to keystore.jks
        run: echo -n "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: "5.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "beta"
      - uses: chkfung/android-version-actions@v1.2.1
        with:
          gradlePath: android/app/build.gradle # or app/build.gradle.kts
          versionCode: ${{ job.outputs.version_code }}
          versionName: ${{ steps.gitversion.outputs.nuGetVersion  }}
      - run: flutter clean
      - run: flutter pub get
      - run: echo "nuGetVersion = ${{ steps.gitversion.outputs.nuGetVersion  }}"
      - run: echo "version_From_version_job = $version"
      - run: flutter analyze --no-fatal-warnings --no-fatal-infos
      - run: flutter build apk --release --split-per-abi --build-name=${{ steps.gitversion.outputs.nuGetVersion  }} --build-number=${{ job.outputs.version_code }}
      - run: flutter build appbundle --release --build-name=${{ steps.gitversion.outputs.nuGetVersion  }} --build-number=${{ job.outputs.version_code }}
      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
          token: ${{ github.token }}
          commit: ${{ github.sha }}
          allowUpdates: true
      - name: Upload app bundle
        uses: actions/upload-artifact@v2
        with:
          name: appbundle
          path: build/app/outputs/bundle/release/app-release.aab
  release:
    name: Release app to internal track
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get appbundle from artifacts
        uses: actions/download-artifact@v3
        with:
          name: appbundle
      - name: Release app to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: com.humhub.app
          releaseFiles: app-release.aab
          track: alpha
          status: completed